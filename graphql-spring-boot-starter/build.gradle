import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
	id 'org.springframework.boot' version '2.5.0' apply false
	id 'java-library'
}

group = 'org.springframework.experimental'
description = "GraphQL Spring Boot Starter"

java {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

dependencyManagement {
	imports {
		mavenBom SpringBootPlugin.BOM_COORDINATES
	}
	generatedPomCustomization {
		enabled = false
	}
}

dependencies {
	api project(':spring-graphql')
	api 'com.graphql-java:graphql-java:0.0.0-2021-07-06T01-36-09-02444b78'
	api 'io.projectreactor:reactor-core'
	api 'org.springframework:spring-context'
	api 'org.springframework.boot:spring-boot-starter'

	compileOnly 'org.springframework:spring-webflux'
	compileOnly 'org.springframework:spring-webmvc'
	compileOnly 'org.springframework:spring-websocket'
	compileOnly 'javax.servlet:javax.servlet-api'
	compileOnly 'javax.websocket:javax.websocket-api'

	compileOnly 'io.micrometer:micrometer-core'
	compileOnly 'org.springframework.boot:spring-boot-actuator-autoconfigure'

	compileOnly 'org.springframework.security:spring-security-config'
	compileOnly 'org.springframework.security:spring-security-web'

	compileOnly 'com.querydsl:querydsl-core:4.4.0'
	compileOnly 'org.springframework.data:spring-data-commons'

	compileOnly project(':spring-graphql-test')
	compileOnly 'org.springframework.boot:spring-boot-test'

	compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.springframework.boot:spring-boot-autoconfigure-processor'

	testImplementation project(':spring-graphql-test')
	testImplementation 'com.fasterxml.jackson.core:jackson-databind'
	testImplementation 'org.springframework:spring-webflux'
	testImplementation 'org.springframework:spring-webmvc'
	testImplementation 'org.springframework:spring-websocket'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'io.projectreactor.netty:reactor-netty'
	testImplementation 'javax.servlet:javax.servlet-api'
	testImplementation 'org.apache.tomcat.embed:tomcat-embed-core'
	testImplementation 'org.apache.tomcat.embed:tomcat-embed-websocket'
	testImplementation 'org.springframework.boot:spring-boot-actuator-autoconfigure'
	testImplementation 'io.micrometer:micrometer-core'
	testImplementation 'org.springframework.security:spring-security-config'
	testImplementation 'org.springframework.security:spring-security-web'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

apply from: "${rootDir}/gradle/publishing.gradle"